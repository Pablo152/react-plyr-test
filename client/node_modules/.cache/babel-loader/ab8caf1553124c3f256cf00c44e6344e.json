{"ast":null,"code":"var _jsxFileName = \"/home/pabloazuaje/test-react-plyr/src/components/Chat.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createElement, useEffect, useRef } from \"react\";\nimport { Input, Button, Comment, List, Tooltip, Avatar, Modal, Typography, Row, Col } from \"antd\";\nimport { SendOutlined, DislikeOutlined, LikeOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\nimport { TwitterPicker } from \"react-color\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\nconst {\n  Title\n} = Typography;\n\nconst Chat = () => {\n  _s();\n\n  const [likes, setLikes] = useState(0);\n  const [dislikes, setDislikes] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [name, setName] = useState(\"Withu\");\n  const [color, setColor] = useState(\"#1890ff\");\n  const [author, setAuthor] = useState({\n    name: \"Withu\",\n    color: \"#1890ff\"\n  });\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const avatarRef = useRef(null);\n  useEffect(() => {\n    setIsModalVisible(true);\n  }, []);\n\n  if (avatarRef.current) {\n    avatarRef.current.onclick = () => {\n      setIsModalVisible(true);\n    };\n  }\n\n  const actions = [/*#__PURE__*/_jsxDEV(Tooltip, {\n    title: \"Like\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => setLikes(1),\n      children: [/*#__PURE__*/createElement(LikeOutlined), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"comment-action\",\n        children: likes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, \"comment-basic-like\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n    title: \"Dislike\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => setDislikes(1),\n      children: [/*#__PURE__*/createElement(DislikeOutlined), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"comment-action\",\n        children: dislikes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, \"comment-basic-dislike\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this)];\n  const [messages, setMessages] = useState([{\n    actions: actions,\n    author: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Withu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }, this),\n    avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n      style: {\n        color: \"black\",\n        backgroundColor: \"#1890ff\",\n        margin: 5\n      },\n      children: \"WU\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this),\n    content: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enjoy!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 16\n    }, this),\n    datetime: /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: moment().format(\"YYYY-MM-DD HH:mm_ss\"),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: moment().fromNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)\n  }]);\n\n  const createMessage = el => {\n    el.preventDefault();\n    const name = author.name;\n    const content = message;\n    const datetime_title = moment().format(\"YYYY-MM-DD HH:mm_ss\");\n    const datetime_span = moment().fromNow();\n    setMessages(messages.concat({\n      actions: actions,\n      author: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this),\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        ref: avatarRef,\n        style: {\n          color: \"black\",\n          backgroundColor: author.color,\n          margin: 5\n        },\n        children: name.charAt(0).toUpperCase() + name.charAt(1).toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this),\n      content: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 18\n      }, this),\n      datetime: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: datetime_title,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: datetime_span\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)\n    }));\n    setMessage(\"\");\n  };\n\n  const handleOk = () => {\n    setAuthor({\n      name,\n      color\n    });\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setName(author.name || \"Withu\");\n    setColor(author.color || \"#1890ff\");\n    setIsModalVisible(false);\n  };\n\n  const setNameState = el => {\n    setName(el.target.value);\n  };\n\n  const setColorState = (color, event) => {\n    setColor(color.hex);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      destroyOnClose: true,\n      title: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          level: 2,\n          children: [\"WITH \", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"inline\",\n              color: \"#1890ff\"\n            },\n            children: \"U\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          level: 5,\n          style: {\n            color: \"rgba(0, 0, 0, 0.5)\",\n            marginTop: -7\n          },\n          children: \"Set-up your user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      visible: isModalVisible,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        justify: \"start\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 2,\n          sm: 2,\n          md: 6,\n          lg: 8,\n          xl: 3,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            size: \"large\",\n            style: {\n              color: \"black\",\n              backgroundColor: color,\n              marginBottom: 10\n            },\n            children: name.charAt(0).toUpperCase() + name.charAt(1).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2,\n          sm: 4,\n          md: 6,\n          lg: 8,\n          xl: 10,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            style: {\n              marginTop: 4,\n              marginLeft: -5\n            },\n            onChange: setNameState,\n            placeholder: author.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TwitterPicker, {\n        onChangeComplete: setColorState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(List, {\n        className: \"comment-list\",\n        style: {\n          overflowY: \"auto\",\n          maxHeight: \"82vh\",\n          display: \"flex\",\n          flexDirection: \"column-reverse\"\n        },\n        itemLayout: \"horizontal\",\n        dataSource: messages,\n        renderItem: item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            style: {\n              background: \"white\",\n              margin: 15,\n              padding: 2\n            },\n            actions: item.actions,\n            author: item.author,\n            avatar: item.avatar,\n            content: item.content,\n            datetime: item.datetime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        bottom: 0,\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextArea, {\n        rows: 4,\n        value: message,\n        style: {\n          borderRadius: 10\n        },\n        onChange: el => setMessage(el.target.value),\n        onPressEnter: createMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        shape: \"round\",\n        style: {\n          float: \"right\",\n          marginTop: 5\n        },\n        icon: /*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }, this),\n        onClick: createMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Chat, \"nEfISD+Gp50vrQPNZQRp93YpVSQ=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/pabloazuaje/test-react-plyr/src/components/Chat.tsx"],"names":["React","useState","createElement","useEffect","useRef","Input","Button","Comment","List","Tooltip","Avatar","Modal","Typography","Row","Col","SendOutlined","DislikeOutlined","LikeOutlined","moment","TwitterPicker","TextArea","Title","Chat","likes","setLikes","dislikes","setDislikes","message","setMessage","name","setName","color","setColor","author","setAuthor","isModalVisible","setIsModalVisible","avatarRef","current","onclick","actions","messages","setMessages","avatar","backgroundColor","margin","content","datetime","format","fromNow","createMessage","el","preventDefault","datetime_title","datetime_span","concat","charAt","toUpperCase","handleOk","handleCancel","setNameState","target","value","setColorState","event","hex","display","marginTop","marginBottom","marginLeft","overflowY","maxHeight","flexDirection","item","background","padding","position","bottom","borderRadius","float"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  createElement,\n  useEffect,\n  useRef,\n} from \"react\";\nimport {\n  Input,\n  Button,\n  Comment,\n  List,\n  Tooltip,\n  Avatar,\n  Modal,\n  Typography,\n  Row,\n  Col,\n} from \"antd\";\nimport {\n  SendOutlined,\n  DislikeOutlined,\n  LikeOutlined\n} from \"@ant-design/icons\";\nimport moment from \"moment\";\nimport { TwitterPicker, ColorResult } from \"react-color\";\n\nconst { TextArea } = Input;\nconst { Title } = Typography;\n\ntype message = {\n  actions: JSX.Element[];\n  author: JSX.Element;\n  avatar: JSX.Element;\n  content: JSX.Element;\n  datetime: JSX.Element;\n};\n\ninterface author {\n  name: string;\n  color: string;\n}\n\nconst Chat = () => {\n  const [likes, setLikes] = useState<number>(0);\n  const [dislikes, setDislikes] = useState<number>(0);\n  const [message, setMessage] = useState<string>(\"\");\n  const [name, setName] = useState<string>(\"Withu\");\n  const [color, setColor] = useState<string>(\"#1890ff\");\n  const [author, setAuthor] = useState<author>({\n    name: \"Withu\",\n    color: \"#1890ff\",\n  });\n  const [isModalVisible, setIsModalVisible] = useState<boolean>(false);\n  const avatarRef = useRef<HTMLElement>(null);\n\n  useEffect(() => {\n    setIsModalVisible(true);\n  }, []);\n\n  if (avatarRef.current) {\n    avatarRef.current.onclick = () => {\n      setIsModalVisible(true);\n    };\n  }\n\n  const actions = [\n    <Tooltip key=\"comment-basic-like\" title=\"Like\">\n      <span onClick={() => setLikes(1)}>\n        {createElement(LikeOutlined)}\n        <span className=\"comment-action\">{likes}</span>\n      </span>\n    </Tooltip>,\n    <Tooltip key=\"comment-basic-dislike\" title=\"Dislike\">\n      <span onClick={() => setDislikes(1)}>\n        {createElement(DislikeOutlined)}\n        <span className=\"comment-action\">{dislikes}</span>\n      </span>\n    </Tooltip>,\n  ];\n\n  const [messages, setMessages] = useState<message[]>([\n    {\n      actions: actions,\n      author: <p>Withu</p>,\n      avatar: (\n        <Avatar\n          style={{ color: \"black\", backgroundColor: \"#1890ff\", margin: 5 }}\n        >\n          WU\n        </Avatar>\n      ),\n      content: <p>Enjoy!</p>,\n      datetime: (\n        <Tooltip title={moment().format(\"YYYY-MM-DD HH:mm_ss\")}>\n          <span>{moment().fromNow()}</span>\n        </Tooltip>\n      ),\n    },\n  ]);\n\n  const createMessage = (el: any) => {\n    el.preventDefault();\n    const name = author.name;\n    const content = message;\n    const datetime_title = moment().format(\"YYYY-MM-DD HH:mm_ss\");\n    const datetime_span = moment().fromNow();\n\n    setMessages(\n      messages.concat({\n        actions: actions,\n        author: <p>{name}</p>,\n        avatar: (\n          <Avatar\n            ref={avatarRef}\n            style={{ color: \"black\", backgroundColor: author.color, margin: 5 }}\n          >\n            {name.charAt(0).toUpperCase() + name.charAt(1).toUpperCase()}\n          </Avatar>\n        ),\n        content: <p>{content}</p>,\n        datetime: (\n          <Tooltip title={datetime_title}>\n            <span>{datetime_span}</span>\n          </Tooltip>\n        ),\n      })\n    );\n    setMessage(\"\");\n  };\n\n  const handleOk = () => {\n    setAuthor({\n      name,\n      color,\n    });\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setName(author.name || \"Withu\");\n    setColor(author.color || \"#1890ff\");\n    setIsModalVisible(false);\n  };\n\n  const setNameState = (el: React.ChangeEvent<HTMLInputElement>) => {\n    setName(el.target.value);\n  };\n\n  const setColorState = (\n    color: ColorResult,\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setColor(color.hex);\n  };\n\n  return (\n    <>\n      <Modal\n        destroyOnClose\n        title={\n          <>\n            <Title level={2}>\n              WITH <div style={{ display: \"inline\", color: \"#1890ff\" }}>U</div>\n            </Title>\n            <Title\n              level={5}\n              style={{ color: \"rgba(0, 0, 0, 0.5)\", marginTop: -7 }}\n            >\n              Set-up your user\n            </Title>\n          </>\n        }\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <Row justify=\"start\">\n          <Col xs={2} sm={2} md={6} lg={8} xl={3}>\n            <Avatar\n              size=\"large\"\n              style={{\n                color: \"black\",\n                backgroundColor: color,\n                marginBottom: 10,\n              }}\n            >\n              {name.charAt(0).toUpperCase() + name.charAt(1).toUpperCase()}\n            </Avatar>\n          </Col>\n          <Col xs={2} sm={4} md={6} lg={8} xl={10}>\n            <Input\n              style={{ marginTop: 4, marginLeft: -5 }}\n              onChange={setNameState}\n              placeholder={author.name}\n            ></Input>\n          </Col>\n        </Row>\n        <TwitterPicker onChangeComplete={setColorState} />\n      </Modal>\n      <div>\n        <List\n          className=\"comment-list\"\n          style={{\n            overflowY: \"auto\",\n            maxHeight: \"82vh\",\n            display: \"flex\",\n            flexDirection: \"column-reverse\",\n          }}\n          itemLayout=\"horizontal\"\n          dataSource={messages}\n          renderItem={(item) => (\n            <li>\n              <Comment\n                style={{ background: \"white\", margin: 15, padding: 2 }}\n                actions={item.actions}\n                author={item.author}\n                avatar={item.avatar}\n                content={item.content}\n                datetime={item.datetime}\n              />\n            </li>\n          )}\n        />\n      </div>\n\n      <div style={{ position: \"absolute\", bottom: 0, padding: 20 }}>\n        <TextArea\n          rows={4}\n          value={message}\n          style={{ borderRadius: 10 }}\n          onChange={(el) => setMessage(el.target.value)}\n          onPressEnter={createMessage}\n        />\n        <Button\n          type=\"primary\"\n          shape=\"round\"\n          style={{ float: \"right\", marginTop: 5 }}\n          icon={<SendOutlined />}\n          onClick={createMessage}\n        >\n          Send\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}